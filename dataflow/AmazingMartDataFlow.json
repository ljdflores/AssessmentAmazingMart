{
	"name": "AmazingMart",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "ListOfOrdersSrc",
						"type": "DatasetReference"
					},
					"name": "ListOfOrdersSRC"
				},
				{
					"dataset": {
						"referenceName": "OrdersBreakdownSrc",
						"type": "DatasetReference"
					},
					"name": "OrdersBreakdownSRC"
				},
				{
					"dataset": {
						"referenceName": "SalesTargetSrc",
						"type": "DatasetReference"
					},
					"name": "SalesTargetSRC"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "Output",
						"type": "DatasetReference"
					},
					"name": "OrdersBreakdown"
				},
				{
					"dataset": {
						"referenceName": "Output",
						"type": "DatasetReference"
					},
					"name": "Orders"
				}
			],
			"transformations": [
				{
					"name": "MinMaxAvg"
				},
				{
					"name": "SumOrders"
				},
				{
					"name": "ListOfOrdersSumOrders"
				},
				{
					"name": "LOandSOMinMaxAvg"
				},
				{
					"name": "Select1"
				},
				{
					"name": "Statement"
				}
			],
			"script": "source(output(\n\t\t{Order ID} as string,\n\t\t{Order Date} as date,\n\t\t{Customer Name} as string,\n\t\tCity as string,\n\t\tCountry as string,\n\t\tRegion as string,\n\t\tSegment as string,\n\t\t{Ship Date} as date,\n\t\t{Ship Mode} as string,\n\t\tState as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tpartitionBy('hash', 1)) ~> ListOfOrdersSRC\nsource(output(\n\t\t{Order ID} as string,\n\t\t{Product Name} as string,\n\t\tDiscount as double,\n\t\tSales as short,\n\t\tProfit as short,\n\t\tQuantity as short,\n\t\tCategory as string,\n\t\t{Sub-Category} as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tpartitionBy('hash', 1)) ~> OrdersBreakdownSRC\nsource(output(\n\t\t{Order Date} as date,\n\t\tCategory as string,\n\t\tTarget as short\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tpartitionBy('hash', 1)) ~> SalesTargetSRC\nSalesTargetSRC aggregate(groupBy(Category,\n\t\t{Order Date}),\n\tMaxTarget = max(Target),\n\t\tMinTarget = min(Target),\n\t\tAvgTarget = avg(Target),\n\tpartitionBy('hash', 1)) ~> MinMaxAvg\nOrdersBreakdownSRC aggregate(groupBy({Order ID},\n\t\tCategory),\n\t{Total Discount} = sum(Discount),\n\t\t{Total Sales} = sum(Sales),\n\t\t{Total Profit} = sum(Profit),\n\tpartitionBy('hash', 1)) ~> SumOrders\nListOfOrdersSRC, SumOrders join(ListOfOrdersSRC@{Order ID} == SumOrders@{Order ID},\n\tjoinType:'left',\n\tpartitionBy('hash', 1),\n\tbroadcast: 'auto')~> ListOfOrdersSumOrders\nListOfOrdersSumOrders, MinMaxAvg join(ListOfOrdersSRC@{Order Date} == MinMaxAvg@{Order Date}\n\t&& SumOrders@Category == MinMaxAvg@Category,\n\tjoinType:'left',\n\tpartitionBy('hash', 1),\n\tbroadcast: 'auto')~> LOandSOMinMaxAvg\nLOandSOMinMaxAvg select(mapColumn(\n\t\t{Order ID} = ListOfOrdersSRC@{Order ID},\n\t\t{Order Date} = ListOfOrdersSRC@{Order Date},\n\t\t{Customer Name},\n\t\tCity,\n\t\tCountry,\n\t\tRegion,\n\t\tSegment,\n\t\t{Ship Date},\n\t\t{Ship Mode},\n\t\tState,\n\t\t{Order ID} = SumOrders@{Order ID},\n\t\tCategory = SumOrders@Category,\n\t\t{Total Discount},\n\t\t{Total Sales},\n\t\t{Total Profit},\n\t\tCategory = MinMaxAvg@Category,\n\t\t{Order Date} = MinMaxAvg@{Order Date},\n\t\tMaxTarget,\n\t\tMinTarget,\n\t\tAvgTarget\n\t),\n\tpartitionBy('hash', 1),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select1\nSelect1 derive(Statement = iif({Total Profit} >=1, 'Profit', \r\n    iif({Total Profit} ==0,'Even',\r\n    'Loss'))\r\n\r\n,\n\tpartitionBy('hash', 1)) ~> Statement\nOrdersBreakdownSRC sink(allowSchemaDrift: true,\n\tvalidateSchema: true,\n\tpartitionFileNames:['OrdersBreakdown.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> OrdersBreakdown\nStatement sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['Orders.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> Orders"
		}
	}
}